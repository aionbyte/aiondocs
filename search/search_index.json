{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Aion Documentation For full documentation visit aionbyte documentation .","title":"Home"},{"location":"#welcome-to-aion-documentation","text":"For full documentation visit aionbyte documentation .","title":"Welcome to Aion Documentation"},{"location":"about/","text":"Support support@aionbyte.com support@e2way.co","title":"About"},{"location":"about/#support","text":"support@aionbyte.com support@e2way.co","title":"Support"},{"location":"azure/","text":"Azure Cloud Architecture e2way applications on Azure Cloud Services","title":"Architecture"},{"location":"azure/#azure-cloud-architecture","text":"e2way applications on Azure Cloud Services","title":"Azure Cloud Architecture"},{"location":"logging/","text":"Logging Log Collecting Khi c\u00e1c application logging ra file ho\u1eb7c stdout/stderr th\u00ec vi\u1ec7c collect logs s\u1ebd \u0111\u01b0\u1ee3c deligate cho c\u00e1c logging agents. C\u00e1ch \u00e1p d\u1ee5ng n\u00e0y s\u1ebd tr\u00e1nh cho vi\u1ec7c ph\u1ea3i config th\u00f4ng tin logging backend \u1edf nhi\u1ec1u n\u01a1i. C\u00e1c application container ch\u1ea1y tr\u00ean kubernetes s\u1ebd output log ra stderr/stdout. Logging agent (promtail,fluentbit, fluentd, grafana agent) s\u1ebd l\u00e0m nhi\u1ec7m v\u1ee5 \u0111i collect log t\u1eeb c\u00e1c container v\u00e0 g\u1eedi \u0111\u1ebfn logging backend. Logging backend (loki, elasticsearch...) s\u1ebd l\u00e0 n\u01a1i l\u01b0u tr\u1eef logs. Vi\u1ec7c deploy logging backend c\u1ea7n ch\u00fa \u00fd \u0111\u1ebfn vi\u1ec7c \u00e1p d\u1ee5ng scalable storage v\u00e0 data retention strategy do l\u01b0\u1ee3ng log \u0111\u01b0\u1ee3c ingest c\u00f3 th\u1ec3 r\u1ea5t l\u1edbn, ph\u1ea3i c\u00e2n nh\u1eafc \u0111\u1ebfn t\u00ednh hi\u1ec7u qu\u1ea3 c\u1ee7a log tr\u00e1nh l\u01b0u qu\u00e1 nhi\u1ec1u log kh\u00f4ng c\u1ea7n thi\u1ebft, \u0111\u00f4ng th\u1eddi c\u0169ng ph\u1ea3i l\u01b0u \u0111\u1ee7 log c\u1ea7n thi\u1ebft cho vi\u1ec7c debug system. Log collecting status Component As-is To-be Frontend App Not logging to stdout/stderr yet Logging to stdout/stderr Backend App Logging to stdout/stderr (not preperly implemented) Logging to stdout/stderr (properly implemented) Database Not intergrated to logging backend Intergrated to logging backend Log formatting C\u00e1c library theo c\u00e1c framework v\u1edbi c\u00e1c default output log settings c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u1eadn d\u1ee5ng. Tuy nhi\u00ean c\u00f3 m\u1ed9t s\u1ed1 th\u00f4ng tin c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o log output \u0111\u1ec3 d\u1ec5 d\u00e0ng h\u01a1n trong vi\u1ec7c debug. - Correlation ID : \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o t\u1eeb client ho\u1eb7c service \u0111\u1ea7u ti\u00ean x\u1eed l\u00fd request. Correlation ID s\u1ebd \u0111\u01b0\u1ee3c passing sang c\u00e1c service ti\u1ebfp theo x\u1eed l\u00fd request. Vi\u1ec7c n\u00e0y s\u1ebd gi\u00fap cho vi\u1ec7c query c\u00e1c log li\u00ean quan \u0111\u1ebfn l\u1ed7i d\u1ec5 d\u00e0ng h\u01a1n v\u00e0 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c request \u0111\u00e3 \u0111\u01b0\u1ee3c x\u1eed l\u00fd \u1edf service n\u00e0o. - User ID : khi m\u1ed9t user b\u00e1o c\u00e1o h\u1ec7 th\u1ed1ng l\u1ed7i, n\u1ebfu c\u00e1c request c\u1ee7a user \u0111\u1ec1u \u0111\u01b0\u1ee3c g\u1eafn user id th\u00ec khi query log v\u1edbi param l\u00e0 user id v\u00e0 error code s\u1ebd gi\u1ea3m th\u1eddi gian x\u00e1c \u0111\u1ecbnh nguy\u00ean nh\u00e2n request b\u1ecb l\u1ed7i. - Datetime : th\u01b0\u1eddng c\u00e1c logging library c\u1ee7a framework \u0111\u00e3 bao g\u1ed3m s\u1eb5n vi\u1ec7c logging ng\u00e0y gi\u1edd. Tuy nhi\u00ean c\u00f3 th\u1ec3 chu\u1ea9n ho\u00e1 l\u1ea1i Datetime format theo nhu c\u1ea7u business. Vi\u1ec7c log output \u0111\u01b0\u1ee3c \u0111\u1ecbnh d\u1ea1ng l\u00e0 text ho\u1eb7c json c\u00f3 th\u1ec3 gi\u00fap log colecter transform d\u1eef li\u1ec7u nhanh h\u01a1n tu\u1ef3 v\u00e0o c\u00e1c tool \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng. Log Visualizer C\u00e1c log visualizer s\u1ebd gi\u00fap cho vi\u1ec7c query v\u00e0 view log \u0111\u01b0\u1ee3c tr\u1ef1c quan h\u01a1n. Tu\u1ef3 v\u00e0o stack \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng, c\u00e1c tool nh\u01b0 grafana v\u00e0 kibana c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u1eadn d\u1ee5ng theo stack ph\u00f9 h\u1ee3p.","title":"Logging"},{"location":"logging/#logging","text":"","title":"Logging"},{"location":"logging/#log-collecting","text":"Khi c\u00e1c application logging ra file ho\u1eb7c stdout/stderr th\u00ec vi\u1ec7c collect logs s\u1ebd \u0111\u01b0\u1ee3c deligate cho c\u00e1c logging agents. C\u00e1ch \u00e1p d\u1ee5ng n\u00e0y s\u1ebd tr\u00e1nh cho vi\u1ec7c ph\u1ea3i config th\u00f4ng tin logging backend \u1edf nhi\u1ec1u n\u01a1i. C\u00e1c application container ch\u1ea1y tr\u00ean kubernetes s\u1ebd output log ra stderr/stdout. Logging agent (promtail,fluentbit, fluentd, grafana agent) s\u1ebd l\u00e0m nhi\u1ec7m v\u1ee5 \u0111i collect log t\u1eeb c\u00e1c container v\u00e0 g\u1eedi \u0111\u1ebfn logging backend. Logging backend (loki, elasticsearch...) s\u1ebd l\u00e0 n\u01a1i l\u01b0u tr\u1eef logs. Vi\u1ec7c deploy logging backend c\u1ea7n ch\u00fa \u00fd \u0111\u1ebfn vi\u1ec7c \u00e1p d\u1ee5ng scalable storage v\u00e0 data retention strategy do l\u01b0\u1ee3ng log \u0111\u01b0\u1ee3c ingest c\u00f3 th\u1ec3 r\u1ea5t l\u1edbn, ph\u1ea3i c\u00e2n nh\u1eafc \u0111\u1ebfn t\u00ednh hi\u1ec7u qu\u1ea3 c\u1ee7a log tr\u00e1nh l\u01b0u qu\u00e1 nhi\u1ec1u log kh\u00f4ng c\u1ea7n thi\u1ebft, \u0111\u00f4ng th\u1eddi c\u0169ng ph\u1ea3i l\u01b0u \u0111\u1ee7 log c\u1ea7n thi\u1ebft cho vi\u1ec7c debug system.","title":"Log Collecting"},{"location":"logging/#log-collecting-status","text":"Component As-is To-be Frontend App Not logging to stdout/stderr yet Logging to stdout/stderr Backend App Logging to stdout/stderr (not preperly implemented) Logging to stdout/stderr (properly implemented) Database Not intergrated to logging backend Intergrated to logging backend","title":"Log collecting status"},{"location":"logging/#log-formatting","text":"C\u00e1c library theo c\u00e1c framework v\u1edbi c\u00e1c default output log settings c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u1eadn d\u1ee5ng. Tuy nhi\u00ean c\u00f3 m\u1ed9t s\u1ed1 th\u00f4ng tin c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o log output \u0111\u1ec3 d\u1ec5 d\u00e0ng h\u01a1n trong vi\u1ec7c debug. - Correlation ID : \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o t\u1eeb client ho\u1eb7c service \u0111\u1ea7u ti\u00ean x\u1eed l\u00fd request. Correlation ID s\u1ebd \u0111\u01b0\u1ee3c passing sang c\u00e1c service ti\u1ebfp theo x\u1eed l\u00fd request. Vi\u1ec7c n\u00e0y s\u1ebd gi\u00fap cho vi\u1ec7c query c\u00e1c log li\u00ean quan \u0111\u1ebfn l\u1ed7i d\u1ec5 d\u00e0ng h\u01a1n v\u00e0 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c request \u0111\u00e3 \u0111\u01b0\u1ee3c x\u1eed l\u00fd \u1edf service n\u00e0o. - User ID : khi m\u1ed9t user b\u00e1o c\u00e1o h\u1ec7 th\u1ed1ng l\u1ed7i, n\u1ebfu c\u00e1c request c\u1ee7a user \u0111\u1ec1u \u0111\u01b0\u1ee3c g\u1eafn user id th\u00ec khi query log v\u1edbi param l\u00e0 user id v\u00e0 error code s\u1ebd gi\u1ea3m th\u1eddi gian x\u00e1c \u0111\u1ecbnh nguy\u00ean nh\u00e2n request b\u1ecb l\u1ed7i. - Datetime : th\u01b0\u1eddng c\u00e1c logging library c\u1ee7a framework \u0111\u00e3 bao g\u1ed3m s\u1eb5n vi\u1ec7c logging ng\u00e0y gi\u1edd. Tuy nhi\u00ean c\u00f3 th\u1ec3 chu\u1ea9n ho\u00e1 l\u1ea1i Datetime format theo nhu c\u1ea7u business. Vi\u1ec7c log output \u0111\u01b0\u1ee3c \u0111\u1ecbnh d\u1ea1ng l\u00e0 text ho\u1eb7c json c\u00f3 th\u1ec3 gi\u00fap log colecter transform d\u1eef li\u1ec7u nhanh h\u01a1n tu\u1ef3 v\u00e0o c\u00e1c tool \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng.","title":"Log formatting"},{"location":"logging/#log-visualizer","text":"C\u00e1c log visualizer s\u1ebd gi\u00fap cho vi\u1ec7c query v\u00e0 view log \u0111\u01b0\u1ee3c tr\u1ef1c quan h\u01a1n. Tu\u1ef3 v\u00e0o stack \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng, c\u00e1c tool nh\u01b0 grafana v\u00e0 kibana c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u1eadn d\u1ee5ng theo stack ph\u00f9 h\u1ee3p.","title":"Log Visualizer"},{"location":"pipeline/","text":"CICD CICD Flow Repository Structure \u251c\u2500\u2500 apps \u2502 \u251c\u2500\u2500 base \u2502 \u251c\u2500\u2500 dev \u2502 \u2514\u2500\u2500 prod \u251c\u2500\u2500 crds \u251c\u2500\u2500 infrastructure \u2502 \u251c\u2500\u2500 base \u2502 \u251c\u2500\u2500 dev \u2502 \u2514\u2500\u2500 prod \u2514\u2500\u2500 clusters \u251c\u2500\u2500 dev \u2514\u2500\u2500 prod","title":"Pipeline"},{"location":"pipeline/#cicd","text":"","title":"CICD"},{"location":"pipeline/#cicd-flow","text":"","title":"CICD Flow"},{"location":"pipeline/#repository-structure","text":"\u251c\u2500\u2500 apps \u2502 \u251c\u2500\u2500 base \u2502 \u251c\u2500\u2500 dev \u2502 \u2514\u2500\u2500 prod \u251c\u2500\u2500 crds \u251c\u2500\u2500 infrastructure \u2502 \u251c\u2500\u2500 base \u2502 \u251c\u2500\u2500 dev \u2502 \u2514\u2500\u2500 prod \u2514\u2500\u2500 clusters \u251c\u2500\u2500 dev \u2514\u2500\u2500 prod","title":"Repository Structure"},{"location":"uptime/","text":"Uptime Websites online store/storefront for customer to browse products and make purchase seller portal for seller to promote products and create sell pages fulfillment for fulfiller to complete order and make changes to shipping status Direct dependancy of websites Health check Websites should have health check url to identify if the websites is online For example https://onlinestore.e2way.co/status The url should return status code 200 if the websites itself and all direct dependencies is up. If the response code is not 200, that means that the website is not healthy and count as downtime. SLA At the moment, Websites should give SLA uptime of 99%, which means following possible periods of Downtime Per Day 4 minutes 26 seconds Per Week 10 minutes 5 seconds Per Month 43 minutes 50 seconds Per Year 8 hours 45 minutes 57 seconds","title":"Uptime"},{"location":"uptime/#uptime","text":"","title":"Uptime"},{"location":"uptime/#websites","text":"online store/storefront for customer to browse products and make purchase seller portal for seller to promote products and create sell pages fulfillment for fulfiller to complete order and make changes to shipping status","title":"Websites"},{"location":"uptime/#direct-dependancy-of-websites","text":"","title":"Direct dependancy of websites"},{"location":"uptime/#health-check","text":"Websites should have health check url to identify if the websites is online For example https://onlinestore.e2way.co/status The url should return status code 200 if the websites itself and all direct dependencies is up. If the response code is not 200, that means that the website is not healthy and count as downtime.","title":"Health check"},{"location":"uptime/#sla","text":"At the moment, Websites should give SLA uptime of 99%, which means following possible periods of Downtime Per Day 4 minutes 26 seconds Per Week 10 minutes 5 seconds Per Month 43 minutes 50 seconds Per Year 8 hours 45 minutes 57 seconds","title":"SLA"}]}